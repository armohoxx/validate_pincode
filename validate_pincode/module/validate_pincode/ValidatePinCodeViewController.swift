//
//  ValidatePinCodeViewController.swift
//  validate_pincode
//
//  Created Phattarapon Jungtakarn on 19/7/2566 BE.
//  Copyright © 2566 BE ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Juanpe Catalán @JuanpeCMiOS
//

import UIKit

class ValidatePinCodeViewController: UIViewController {

	var presenter: ValidatePinCodePresenterProtocol?
    var textInputData: String = ""
    
    @IBOutlet weak var containerValidatePinCodeView: UIView!
    @IBOutlet weak var inputTextField: UITextField!
    @IBOutlet weak var validateTitleLabel: UILabel!
    @IBOutlet weak var validateButton: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.presenter?.notifyViewDidLoaded()
        self.initUI()
        self.setupNavigationBar()
        self.setupValidatePinCode()
    }
    
    func initUI() {
        self.containerValidatePinCodeView.layer.cornerRadius = 15
        self.containerValidatePinCodeView.layer.shadowColor = UIColor.yellow.cgColor
        self.inputTextField.layer.cornerRadius = 15
        self.validateButton.layer.cornerRadius = 15
        self.validateButton.backgroundColor = UIColor.link
        self.validateButton.tintColor = UIColor.white
        self.validateButton.layer.borderColor = UIColor.blue.cgColor
        self.validateButton.layer.borderWidth = 1
        self.validateButton.layer.cornerRadius = 15
        self.validateButton.setTitle("Validate", for: .normal)
        self.hideKeyboardWhenTappedAround()
        self.inputTextField.setupRightImage(imageName: "")
    }
    
    func setupNavigationBar() {
        self.navigationItem.title = "Validate PinCode"
        
        let imageBack = UIImage(named: "ic_back")
        let imageDelete = UIImage(named: "ic_close")
        
        let leftBarButton = UIBarButtonItem(
            image: imageBack?.withRenderingMode(.alwaysOriginal),
            style: .plain,
            target: self,
            action: #selector(onClickBackButton)
        )
        
        leftBarButton.setTitleTextAttributes([
            NSAttributedString.Key.font : UIFont.systemFont(ofSize: 25.0),
            NSAttributedString.Key.foregroundColor : UIColor.gray,
        ], for: .normal)
        
        let rightBarButton = UIBarButtonItem(
            image: imageDelete?.withRenderingMode(.alwaysOriginal),
            style: .plain,
            target: self,
            action: #selector(onClickCloseButton)
        )
        
        rightBarButton.setTitleTextAttributes([
            NSAttributedString.Key.font : UIFont.systemFont(ofSize: 25.0),
            NSAttributedString.Key.foregroundColor : UIColor.gray,
        ], for: .normal)
        
        self.navigationItem.leftBarButtonItems = [leftBarButton]
        self.navigationItem.rightBarButtonItem = rightBarButton
    }
    
    @objc func onClickBackButton() {
        self.presenter?.notifyRouteToMain()
    }
    
    @objc func onClickCloseButton() {
        let alert = UIAlertController(title: "Exit?", message: "Are you sure to exit application", preferredStyle: .alert)
        alert.addAction(UIAlertAction(title: "Sure", style: UIAlertAction.Style.default, handler: { _ in
            DispatchQueue.main.asyncAfter(deadline: .now()) {
                UIApplication.shared.perform(#selector(NSXPCConnection.suspend))
            }
        }))
        alert.addAction(UIAlertAction(title: "Cancel", style: UIAlertAction.Style.cancel, handler: nil))
        
        self.present(alert, animated: true)
    }
    
    func setupValidatePinCode() {
        self.inputTextField.delegate = self
        self.inputTextField.addTarget(self, action: #selector(textFieldDidChangeEditing(_:)),
                                                 for: .editingChanged)
    }
    
    @objc func textFieldDidChangeEditing(_ textField: UITextField) {
        if let text = textField.text , !text.isEmpty {
            self.inputTextField.setupRightImage(imageName: "ic_delete_all_text")
            self.textInputData = text
        } else {
            self.textInputData = ""
            self.inputTextField.setupRightImage(imageName: "")
        }
    }
    
    @IBAction func onClickValidateButton(_ sender: UIButton) {
        let arrayString = self.textInputData.map { String($0) }
        let arrayInt = arrayString.map { Int($0)! }
        
        if arrayInt.count < 6 {
            self.validateTitleLabel.text = "Result : input จะต้องมีความยาวมากกว่าหรือเท่ากับ 6 ตัวอักษร"
        } else {
            let duplicates = Dictionary(grouping: arrayInt, by: {$0}).filter { $1.count > 2 }.keys
            let isConsecutives = self.isConsecutiveNumbers(arrayInt)
            let duplicatesSecondGroup = Dictionary(grouping: arrayInt, by: {$0}).filter { $1.count > 1 }.keys
            
            if duplicates.count > 0 {
                self.validateTitleLabel.text = "Result : input จะต้องกันไม่ให้มีเลขซ้ำติดกันเกิน 2 ตัว"
            } else if isConsecutives == true {
                self.validateTitleLabel.text = "Result : input จะต้องกันไม่ให้มีเลขเรียงกันเกิน 2 ตัว"
            } else if duplicatesSecondGroup.count > 2 {
                self.validateTitleLabel.text = "Result : input จะต้องกันไม่ให้มีเลขชุดซ้ำ เกิน 2 ชุด"
            } else {
                self.validateTitleLabel.text = "Result : input สมบูรณ์"
            }
        }
    }
    
    func isConsecutiveNumbers(_ numbers: [Int]) -> Bool {
        guard numbers.count >= 2 else {
            return false
        }
        
        let sortedNumbers = numbers.sorted()
        
        for i in 0..<2 {
            if sortedNumbers[i] + 1 != sortedNumbers[i + 1] {
                return false
            }
        }
        
        return true
    }
    
}

extension ValidatePinCodeViewController: ValidatePinCodeViewProtocol {
    
    func displayInputTextFieldEmpty() {
        self.view.endEditing(true)
        self.inputTextField.text = ""
        self.textInputData = ""
        self.validateTitleLabel.text = "Result : "
        self.inputTextField.setupRightImage(imageName: "")
    }
    
}


extension ValidatePinCodeViewController: UITextFieldDelegate {
    
    func textFieldShouldReturn(_ textField: UITextField) -> Bool {
        self.view.endEditing(true)
        return true
    }
    
}
